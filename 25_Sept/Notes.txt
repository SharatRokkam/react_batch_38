*******  In Today's session we will see real world example and learn how to add or remove products to the cart.....*********************

For this we will need React Query(Tanstack) and useReducer to manage the state of your application....

custom Hooks, React Query, useReducer(context API).........


First we have to setup a base for our application..(shopping cart) for that we will make use of React Query to fetch the data from an API.....

What is Tanstack Query ?
TanStack Query (FKA React Query) is often described as the missing data-fetching library for web applications, but in more technical terms, it makes "fetching", "caching", "synchronizing" and "updating server state" in your web applications a breeze.

Now what is Server State???
******* Traditional State vs. Server State ************

Traditional (Client) State: This is the state or data that lives inside your app—for example, the state in a React component like a list of items or a form input. You fully control this data, and it only exists while the app is running in your browser.

Server State: This is data that lives on a server—for example, user profiles, blog posts, or product data from a database. You don't fully control it because it exists outside of your app on a remote server, and you need to fetch or update it using asynchronous API calls.


In Short:
Client state is data that lives in your app, and you control it completely.
Server state is data stored on a server, and it can be changed by others, so you need to fetch and update it using APIs.
Managing server state requires special tools because it’s asynchronous, can get outdated, and might be modified by other users or systems outside your app.